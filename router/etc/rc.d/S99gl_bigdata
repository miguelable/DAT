#!/bin/sh  /etc/rc.common

. /lib/functions.sh
. /lib/functions/network.sh

START=99
USE_PROCD=1
PROG=/usr/bin/gl_upload

start_service()
{	
	#mode=`uci get glconfig.bridge.mode 2>/dev/null`
	#if [ "$mode" = "ap" -o "$mode" = "wds" -o "$mode" = "relay" ];then
	#	exit 1
	#fi
	dataupload=`uci get glbigdata.bigdata.enable 2>/dev/null`
	if [ "$dataupload" = "0" ];then
		exit 1
	fi
	#[ -n "$(grep "DK01" /proc/device-tree/model 2>/dev/null)" ] && product="b1300"
	#[ -n "$(grep "DK04" /proc/device-tree/model 2>/dev/null)" ] && product="s1300"
	#if [ "$product" = "s1300" -o "$product" = "b1300" ];then
	#	menable=`uci get repacd.repacd.Enable 2>/dev/null`
		#if [ "$menable" = "1" ];then
			#srouter=`uci get repacd.repacd.Role_real 2>/dev/null`
			#if [ "$srouter" = "NonCAP" ];then
			#	exit 1
			#fi
		#fi
	#fi
	rm /tmp/upload_timestamp -rf
	rm /tmp/current_timestamp -rf
	procd_open_instance
	#procd_set_param limits core="unlimited"
	procd_set_param command "$PROG"
	#procd_set_param stdout 1
	#procd_set_param stderr 1
	procd_set_param respawn
	procd_close_instance
}
stop_service()
{
	rm /tmp/upload_timestamp -rf
	rm /tmp/current_timestamp -rf
	killall -9 gl_upload 2>/dev/null
	killall gl_upload 2>/dev/null
}
