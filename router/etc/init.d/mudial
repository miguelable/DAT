#!/bin/sh /etc/rc.common


START=28

. /lib/functions.sh

#添加MWAN负载均衡相关配置
#$1:接口名称
mwan_cfg_add() {
	cp /etc/config/mwan3 /usr/share/mudial/mwan3.orig
	cp /usr/share/mudial/mudial-mwan3.config /etc/config/mwan3
}

#删除MWAN负载均衡相关配置
#$1:接口名称
mwan_cfg_del() {
	cp /usr/share/mudial/mwan3.orig /etc/config/mwan3 
}

#添加macvlan设备
#$1:设虚拟备名称 $2:原始设备名称
macvlan_dev_add() {
	uci set network.macvlandev_${1}=device
	uci set network.macvlandev_${1}.name=${1}
	uci set network.macvlandev_${1}.ifname=${2}
	uci set network.macvlandev_${1}.type=macvlan
}

#删除macvlan设备
#$1:设虚拟备名称 
macvlan_dev_del() {
	uci del network.macvlandev_${1}
}

#添加防火墙配置
#$1:接口名
firewall_add() {
	local orig="$(uci get firewall.@zone[1].network)"
	for iface in $orig;do
		[ "$iface" = "$1" ] && return
	done
	uci del firewall.@zone[1].network
	uci set firewall.@zone[1].network="$orig ${1}"
}

#删除防火墙配置
#$1:接口名 
firewall_del() {
	local orig="$(uci get firewall.@zone[1].network)"
	local new=""
	for iface in $orig;do
		[ "$iface" = "$1" ] && continue
		if [ -z "$new" ];then
			new="$iface"
		else
			new="$new $iface"
		fi
	done
	uci set firewall.@zone[1].network="$new"
}


#添加PPPoE接口
#$1:接口名称 $2:设备名称 $3:协议 $4:账户 $5:密码 $6:网关跃点 
config_interface() {
	#gen vwan macaddr
	NEW_MACADDR=$(hexdump -n3 -e'1/3 "8c:8d:8e" 3/1 ":%02X" "\n"' /dev/random)
	#gen wan if
	uci set network.${1}=interface
	uci set network.${1}.ifname="${1}"
	uci set network.${1}.proto="${3}"
	[ "$3" = "pppoe" ] && [ -n "$4" ] && uci set network.${1}.username="${4}"
	[ "$3" = "pppoe" ] && [ -n "$5" ] && uci set network.${1}.password="${5}"
	[ "$3" = "static" ] && [ -n "$6" ] && uci set network.${1}.ipaddr="${6}"
	[ "$3" = "static" ] && [ -n "$7" ] && uci set network.${1}.netmask="${7}"
	[ "$3" = "static" ] && [ -n "$8" ] && uci set network.${1}.gateway="${8}"
	[ "$3" = "static" ] && [ -n "$9" -o -n "$10" ] && uci set network.${1}.dns="${9} ${10}"
	uci set network.${1}.metric=${11}
	uci set network.${1}.macaddr=$NEW_MACADDR
	#gen firewall
	firewall_add ${1}
	
	macvlan_dev_add "${1}" ${2}
}

wan_clone() {
	local interface="wanclone"
	local ifname="$(uci get network.wan.ifname)"
	local proto="$(uci get network.wan.proto)"
	local username="$(uci -q get network.wan.username)"
	local password="$(uci -q get network.wan.password)"
	local ipaddr="$(uci -q get network.wan.ipaddr)"
	local netmask="$(uci -q get network.wan.netmask)"
	local gateway="$(uci -q get network.wan.gateway)"
	local dns="$(uci -q get network.wan.dns)"
	local metric="$(uci -q  get network.wan.metric)"
	[ -n "$metric" ] && let metric=metric+10
	config_interface "$interface" "$ifname" "$proto" "$username" "$password" "$ipaddr" "$netmask" "$gateway" "$dns" "" "${metric:=20}"
	mwan_cfg_add
}

manual_set() {
	local interface="wanclone"
	local ifname="$(uci get network.wan.ifname)"
	local proto="$(uci get mudial.global.proto)"
	local username="$(uci -q get mudial.global.username)"
	local password="$(uci -q get mudial.global.password)"
	local ipaddr="$(uci -q get mudial.global.ipaddr)"
	local netmask="$(uci -q get mudial.global.netmask)"
	local gateway="$(uci -q get mudial.global.gateway)"
	local dns1="$(uci -q get mudial.global.dns1)"
	local dns2="$(uci -q get mudial.global.dns2)"
	local metric="$(uci -q  get network.wan.metric)"
	[ -n "$metric" ] && let metric=metric+10
	config_interface "$interface" "$ifname" "$proto" "$username" "$password" "$ipaddr" "$netmask" "$gateway" "$dns1" "$dns2" "${metric:=20}"
	mwan_cfg_add
}

remove_wan_clone() {
	local interface="wanclone"
	firewall_del ${interface}
	uci del network.${interface}
	mwan_cfg_del
	macvlan_dev_del ${interface}
}

apply_cfg() {
	uci commit
	/etc/init.d/network restart
	/etc/init.d/firewall reload
	/etc/init.d/mwan3 restart
}

start()
{
	local enable=$(uci get mudial.global.enabled)
	local mode=$(uci get mudial.global.mode)
    [ "$enable" = 1 ] || return
	if [ "$mode" = "clone" ];then
		wan_clone
	else
		manual_set
	fi
	apply_cfg
}

stop()
{
	remove_wan_clone
	apply_cfg
}


return 0
